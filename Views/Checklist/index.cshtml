@* Views/Checklist/Index.cshtml *@
@model List<AparAppsWebsite.Models.Checklist>

@{
    ViewData["Title"] = "Daftar Checklist";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Daftar Checklist</h3>
                    <div class="btn-group">
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Tambah Checklist
                        </a>
                        <a href="@Url.Action("Bulk")" class="btn btn-success">
                            <i class="fas fa-layer-group"></i> Bulk Create
                        </a>
                    </div>
                </div>
                
                <div class="card-body">
                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger">
                            @ViewBag.Error
                        </div>
                    }
                    
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["Success"]
                        </div>
                    }
                    
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["Error"]
                        </div>
                    }

                    @if (Model.Count > 0)
                    {
                        <!-- Filter by Jenis Peralatan -->
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <select id="jenisFilter" class="form-select">
                                    <option value="">Semua Jenis Peralatan</option>
                                    @foreach (var jenis in Model.GroupBy(c => c.JenisNama).Select(g => g.Key).OrderBy(j => j))
                                    {
                                        <option value="@jenis">@jenis</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-8">
                                <input type="text" id="searchFilter" class="form-control" placeholder="Cari pertanyaan checklist...">
                            </div>
                        </div>

                        <!-- Grouped by Jenis Peralatan -->
                        @foreach (var jenisGroup in Model.GroupBy(c => c.JenisNama).OrderBy(g => g.Key))
                        {
                            <div class="jenis-group mb-4" data-jenis="@jenisGroup.Key">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h5 class="text-primary mb-0">
                                        <i class="fas fa-tools"></i> @jenisGroup.Key
                                        <span class="badge bg-primary ms-2">@jenisGroup.Count() items</span>
                                    </h5>
                                    <a href="@Url.Action("ByJenis", new { jenisId = jenisGroup.First().JenisId })" 
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-eye"></i> View All
                                    </a>
                                </div>
                                
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover">
                                        <thead class="table-light">
                                            <tr>
                                                @* <th width="80">ID</th> *@
                                                <th>Pertanyaan Checklist</th>
                                                <th width="150">Aksi</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in jenisGroup.OrderBy(c => c.Id))
                                            {
                                                <tr class="checklist-row" data-question="@item.Pertanyaan.ToLower()">
                                                    @* <td>@item.Id</td> *@
                                                    <td>@item.Pertanyaan</td>
                                                    <td>
                                                        <div class="btn-group" role="group">
                                                            <a href="@Url.Action("Edit", new { id = item.Id })" 
                                                               class="btn btn-sm btn-warning">
                                                                <i class="fas fa-edit"></i>
                                                            </a>
                                                            <button type="button" class="btn btn-sm btn-danger" 
                                                                    onclick="confirmDelete(@item.Id, '@Html.Raw(Html.Encode(item.Pertanyaan))')">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> Belum ada data checklist.
                            <br><small>Pastikan sudah menambahkan <strong>Jenis Peralatan</strong> terlebih dahulu.</small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Konfirmasi Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Hapus</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Apakah Anda yakin ingin menghapus checklist:</p>
                <blockquote class="blockquote">
                    <p id="deleteChecklistQuestion" class="mb-0"></p>
                </blockquote>
                <p class="text-danger mt-2"><small>Data yang sudah dihapus tidak dapat dikembalikan.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Hapus</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id, question) {
            document.getElementById('deleteChecklistQuestion').textContent = question;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + id;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
        
        // Filter by Jenis Peralatan
        document.getElementById('jenisFilter').addEventListener('change', function() {
            const selectedJenis = this.value.toLowerCase();
            const jenisGroups = document.querySelectorAll('.jenis-group');
            
            jenisGroups.forEach(group => {
                const jenisName = group.getAttribute('data-jenis').toLowerCase();
                if (selectedJenis === '' || jenisName.includes(selectedJenis)) {
                    group.style.display = 'block';
                } else {
                    group.style.display = 'none';
                }
            });
        });
        
        // Search filter
        document.getElementById('searchFilter').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const checklistRows = document.querySelectorAll('.checklist-row');
            
            checklistRows.forEach(row => {
                const question = row.getAttribute('data-question');
                if (question.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
            
            // Hide empty groups
            const jenisGroups = document.querySelectorAll('.jenis-group');
            jenisGroups.forEach(group => {
                const visibleRows = group.querySelectorAll('.checklist-row[style=""]');
                if (visibleRows.length === 0) {
                    group.style.display = 'none';
                } else {
                    group.style.display = 'block';
                }
            });
        });
    </script>
}