@model List<AparAppsWebsite.Models.JenisPeralatan>

@{
    ViewData["Title"] = "Jenis Peralatan";
    var total = Model?.Count ?? 0;
}

<style>
    .toolbar .form-control {
        min-width: 320px;
    }

    .toolbar .form-select {
        min-width: 120px;
    }

    .toolbar .btn {
        border-radius: .45rem;
    }

    .k-chip {
        font-size: .8rem;
        border: 1px solid rgba(0, 0, 0, .06);
        background: var(--bs-light);
    }

    .table thead th {
        white-space: nowrap;
    }

    .sticky-head th {
        position: sticky;
        top: 0;
        z-index: 2;
        background: var(--bs-body-bg);
    }

    .table-hover tbody tr:hover {
        filter: brightness(.98);
    }

    .pagination {
        flex-wrap: wrap;
    }
</style>

<div class="container-fluid">
    <div class="row g-3">
        <div class="col-12">

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success d-flex align-items-center gap-2">
                    <i class="fas fa-check-circle"></i><span>@TempData["Success"]</span>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger d-flex align-items-center gap-2">
                    <i class="fas fa-times-circle"></i><span>@TempData["Error"]</span>
                </div>
            }
            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger d-flex align-items-center gap-2">
                    <i class="fas fa-exclamation-triangle"></i><span>@ViewBag.Error</span>
                </div>
            }

            <div class="card border-0 shadow-sm">
                <!-- Header baris 1 -->
                <div class="card-header">
                    <div class="d-flex flex-wrap align-items-center justify-content-between gap-2">
                        <div class="d-flex align-items-start gap-3">
                            <div>
                                <h3 class="card-title mb-0">Daftar Jenis Peralatan</h3>
                                @* <div class="small text-muted">Pencarian cepat & paginasi agar ringan.</div> *@
                            </div>
                            <span class="badge bg-secondary align-self-center" id="countBadge">@total data</span>
                            @* <span class="badge k-chip align-self-center">Halaman: <span id="pageBadge">1</span>/<span
                                    id="pagesBadge">1</span></span>
                            <span class="badge k-chip align-self-center">Per halaman: <span
                                    id="psBadge">20</span></span> *@
                        </div>
                        <div class="d-flex flex-wrap align-items-center gap-2">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Tambah Jenis
                            </a>
                        </div>
                    </div>

                    <!-- Header baris 2: Toolbar (Search + PageSize) -->
                    <div class="toolbar d-flex flex-wrap align-items-end gap-2 mt-2">
                        <div class="input-group" style="max-width:560px;">
                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                            <input id="searchInput" class="form-control" placeholder="Cari nama jenisâ€¦"
                                autocomplete="off" />
                            <button id="resetBtn" class="btn btn-light border" type="button" title="Reset">
                                <i class="fas fa-undo"></i> Reset
                            </button>
                        </div>

                        <select id="pageSizeSel" class="form-select" title="Per halaman">
                            <option value="10">10</option>
                            <option value="20" selected>20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>

                <div class="card-body">
                    @if (Model == null || !Model.Any())
                    {
                        <div class="alert alert-info d-flex align-items-start gap-2">
                            <i class="fas fa-info-circle mt-1"></i>
                            <div>
                                <div class="fw-semibold">Belum ada data jenis peralatan.</div>
                                <div class="small">Tambah data melalui tombol <strong>Tambah Jenis</strong>.</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table id="jenisTable" class="table table-hover align-middle mb-0">
                                <thead class="table-light sticky-head">
                                    <tr>
                                        <th style="width:80px;">ID</th>
                                        <th>Nama Jenis</th>
                                        <th style="width:180px;">Interval (Bulan)</th>
                                        <th style="width:200px;" class="text-end">Aksi</th>
                                    </tr>
                                </thead>
                                <tbody id="jenisBody">
                                    @foreach (var j in Model)
                                    {
                                        <tr data-id="@j.Id" data-nama="@j.Nama" data-interval="@j.IntervalPemeriksaanBulan">
                                            <td>@j.Id</td>
                                            <td><span class="badge bg-info text-dark">@j.Nama</span></td>
                                            <td><span class="badge bg-warning text-dark">@j.IntervalPemeriksaanBulan</span></td>
                                            <td class="text-end">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@j.Id"
                                                        class="btn btn-sm btn-outline-secondary" title="Detail">
                                                        <i class="fa fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@j.Id" class="btn btn-sm btn-warning"
                                                        title="Edit">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-danger"
                                                        onclick="confirmDelete(@j.Id, '@j.Nama')" title="Hapus">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="small text-muted">
                                Menampilkan <span id="shownRange">-</span> dari <strong id="totalCount">@total</strong>
                                entri.
                            </div>
                            <nav aria-label="pagination">
                                <ul class="pagination mb-0" id="pager"></ul>
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Konfirmasi Hapus</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                Hapus jenis peralatan <strong id="delName"></strong>?<br />
                <small class="text-danger">Jika sudah digunakan peralatan, penghapusan ditolak API.</small>
            </div>
            <div class="modal-footer">
                <form id="delForm" method="post">
                    @Html.AntiForgeryToken()
                    <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Batal</button>
                    <button class="btn btn-danger" type="submit">Hapus</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const tbody = document.getElementById('jenisBody');
            if (!tbody) return;

            const allRows = Array.from(tbody.querySelectorAll('tr'));
            const totalCountEl = document.getElementById('totalCount');
            const countBadge = document.getElementById('countBadge');
            const shownRange = document.getElementById('shownRange');
            const pager = document.getElementById('pager');
            const pageBadge = document.getElementById('pageBadge');
            const pagesBadge = document.getElementById('pagesBadge');
            const psBadge = document.getElementById('psBadge');

            const qInput = document.getElementById('searchInput');
            const pageSizeSel = document.getElementById('pageSizeSel');
            const resetBtn = document.getElementById('resetBtn');

            let current = 1;

            function lower(s) { return (s ?? '').toString().trim().toLowerCase(); }
            function toInt(s, fb) { const n = parseInt(s, 10); return Number.isFinite(n) ? n : fb; }

            function getData(tr) {
                return {
                    id: toInt(tr.getAttribute('data-id'), 0),
                    nama: tr.getAttribute('data-nama') || '',
                    interval: toInt(tr.getAttribute('data-interval'), null)
                };
            }

            function filterRows() {
                const q = lower(qInput?.value || '');
                let arr = allRows.map(tr => ({ tr, d: getData(tr) }));

                if (q) {
                    arr = arr.filter(x => lower(x.d.nama).includes(q));
                }
                return arr;
            }

            function buildPager(pages) {
                if (!pager) return;
                pager.innerHTML = '';

                function addItem(text, page, disabled, active) {
                    const li = document.createElement('li');
                    li.className = 'page-item' + (disabled ? ' disabled' : '') + (active ? ' active' : '');
                    const a = document.createElement('a');
                    a.className = 'page-link';
                    a.href = '#'; a.textContent = text;
                    a.addEventListener('click', (e) => { e.preventDefault(); if (disabled || active) return; current = page; render(); });
                    li.appendChild(a); pager.appendChild(li);
                }

                addItem('Prev', Math.max(1, current - 1), current <= 1, false);

                const left = Math.max(1, current - 2);
                const right = Math.min(pages, current + 2);

                if (left > 1) {
                    addItem('1', 1, false, current === 1);
                    if (left > 2) {
                        const li = document.createElement('li');
                        li.className = 'page-item disabled';
                        li.innerHTML = '<span class="page-link">â€¦</span>';
                        pager.appendChild(li);
                    }
                }
                for (let p = left; p <= right; p++) {
                    addItem(String(p), p, false, current === p);
                }
                if (right < pages) {
                    if (right < pages - 1) {
                        const li = document.createElement('li');
                        li.className = 'page-item disabled';
                        li.innerHTML = '<span class="page-link">â€¦</span>';
                        pager.appendChild(li);
                    }
                    addItem(String(pages), pages, false, current === pages);
                }

                addItem('Next', Math.min(pages, current + 1), current >= pages, false);
            }

            function render() {
                const pageSize = toInt(pageSizeSel?.value || '20', 20);
                const arr = filterRows();
                const total = arr.length;

                // badges & info
                if (countBadge) countBadge.textContent = `${total} data`;
                if (totalCountEl) totalCountEl.textContent = String(total);

                const pages = Math.max(1, Math.ceil(total / Math.max(pageSize, 1)));
                if (current > pages) current = pages;

                if (pagesBadge) pagesBadge.textContent = String(pages);
                if (pageBadge) pageBadge.textContent = String(current);
                if (psBadge) psBadge.textContent = String(pageSize);

                // tampilkan baris halaman aktif
                const start = (current - 1) * pageSize;
                const end = Math.min(total, start + pageSize);
                allRows.forEach(tr => tr.style.display = 'none');
                for (let i = start; i < end; i++) {
                    arr[i].tr.style.display = '';
                }
                if (shownRange) shownRange.textContent = total === 0 ? '0-0' : `${start + 1}-${end}`;

                buildPager(pages);
            }

            // events
            let t = null;
            qInput?.addEventListener('input', () => { clearTimeout(t); t = setTimeout(() => { current = 1; render(); }, 250); });
            pageSizeSel?.addEventListener('change', () => { current = 1; render(); });
            resetBtn?.addEventListener('click', () => {
                if (qInput) qInput.value = '';
                if (pageSizeSel) pageSizeSel.value = '20';
                current = 1; render();
            });

            // init
            render();

            // Modal delete
            window.confirmDelete = function (id, nama) {
                document.getElementById('delName').textContent = nama || ('ID ' + id);
                document.getElementById('delForm').action = '@Url.Action("Delete")/' + id;
                new bootstrap.Modal(document.getElementById('deleteModal')).show();
            };
        })();
    </script>
}
