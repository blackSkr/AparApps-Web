@model AparAppsWebsite.Models.PetugasListResponse
@using AparAppsWebsite.Models
@using System

@{
    ViewData["Title"] = "Petugas";

    // --- Data dropdown aman-null ---
    var roles  = ViewBag.Roles  as List<RoleItem>   ?? new();
    var lokasi = ViewBag.Lokasi as List<LokasiItem> ?? new();

    // --- Query dari controller ---
    string q        = ViewBag.Query   as string ?? "";
    string roleIdQ  = ViewBag.RoleId  != null ? ViewBag.RoleId.ToString()  : "";
    string lokasiIdQ= ViewBag.LokasiId!= null ? ViewBag.LokasiId.ToString() : "";

    // --- Sorting (selaras Peralatan) ---
    string sortBy  = ViewBag.SortBy  as string ?? "Badge"; // Badge|Nama|Role|Lokasi
    string sortDir = ViewBag.SortDir as string ?? "ASC";   // ASC|DESC

    int curPage  = ViewBag.Page     ?? 1;
    int pageSize = ViewBag.PageSize ?? 20;

    // --- TOTAL dari Controller; fallback ke jumlah item Model ---
    int total = (ViewBag.Total as int?) ?? (Model?.items?.Count ?? 0);

    // --- Paging helper ---
    int totalPages = (int)Math.Ceiling(total / Math.Max(1.0, pageSize));
    int safeCur    = Math.Max(1, Math.Min(Math.Max(1, totalPages), curPage));
    int startIdx   = total == 0 ? 0 : (safeCur - 1) * pageSize + 1;
    int endIdx     = Math.Min(safeCur * pageSize, total);
    int left       = Math.Max(1, safeCur - 2);
    int right      = Math.Min(totalPages, safeCur + 2);

    // --- Toggle dir & flags caret ---
    Func<string, string> ToggleDir = (col) =>
        (string.Equals(sortBy, col, StringComparison.OrdinalIgnoreCase) && sortDir.Equals("ASC", StringComparison.OrdinalIgnoreCase))
        ? "DESC" : "ASC";

    bool sBadge = sortBy.Equals("Badge",  StringComparison.OrdinalIgnoreCase);
    bool sNama  = sortBy.Equals("Nama",   StringComparison.OrdinalIgnoreCase);
    bool sRole  = sortBy.Equals("Role",   StringComparison.OrdinalIgnoreCase);
    bool sLok   = sortBy.Equals("Lokasi", StringComparison.OrdinalIgnoreCase);
    string caret= sortDir.Equals("ASC", StringComparison.OrdinalIgnoreCase) ? "↑" : "↓";

    object commonRoute(int page) => new {
        q,
        roleId  = roleIdQ,
        lokasiId= lokasiIdQ,
        page,
        pageSize,
        sortBy,
        sortDir
    };

    // --- Sorting URLs (reset ke page 1) ---
    string sBadgeUrl = Url.Action("Index", new { q, roleId = roleIdQ, lokasiId = lokasiIdQ, page = 1, pageSize, sortBy = "Badge",  sortDir = ToggleDir("Badge")  }) ?? "#";
    string sNamaUrl  = Url.Action("Index", new { q, roleId = roleIdQ, lokasiId = lokasiIdQ, page = 1, pageSize, sortBy = "Nama",   sortDir = ToggleDir("Nama")   }) ?? "#";
    string sRoleUrl  = Url.Action("Index", new { q, roleId = roleIdQ, lokasiId = lokasiIdQ, page = 1, pageSize, sortBy = "Role",   sortDir = ToggleDir("Role")   }) ?? "#";
    string sLokUrl   = Url.Action("Index", new { q, roleId = roleIdQ, lokasiId = lokasiIdQ, page = 1, pageSize, sortBy = "Lokasi", sortDir = ToggleDir("Lokasi") }) ?? "#";

    // --- Prev/Next URL ---
string prevUrl = Url.Action("Index", commonRoute(Math.Max(1, safeCur - 1))) ?? "#";
    string nextUrl = Url.Action("Index", commonRoute(Math.Min(Math.Max(1, totalPages), safeCur + 1))) ?? "#";

    // Helper URL nomor halaman
    Func<int, string> pg = (int p) => Url.Action("Index", commonRoute(p)) ?? "#";

    // Helper label chip
    string roleNamaTerpilih  = !string.IsNullOrWhiteSpace(roleIdQ)  ? (roles.FirstOrDefault(r => r.Id.ToString() == roleIdQ)?.Display ?? "Tidak diketahui") : "";
    string lokasiNamaTerpilih= !string.IsNullOrWhiteSpace(lokasiIdQ)? (lokasi.FirstOrDefault(l => l.Id.ToString() == lokasiIdQ)?.Nama   ?? "Tidak diketahui") : "";
}

<style>
    .toolbar .form-control, .toolbar .form-select { min-width: 180px; }
    .toolbar .btn { border-radius: .45rem; }
    .k-chip { font-size: .8rem; border: 1px solid rgba(0,0,0,.06); background: var(--bs-light); }
    .sticky-head th { position: sticky; top: 0; z-index: 2; background: var(--bs-body-bg); }
    .table thead th { white-space: nowrap; }
    .table-hover tbody tr:hover { filter: brightness(.98); }
    .table thead th a { text-decoration: none; display: inline-flex; align-items: center; gap: .35rem; }
    .sort-caret { opacity: .55; }
    .sort-active .sort-caret { opacity: 1; }
    .kode-badge { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace; }
    /* Aksi: inline di desktop, dropdown di mobile */
    .action-inline { display: none; }
    .action-dropdown { display: inline-block; }
    @@media (min-width: 768px) {
        .action-inline { display: inline-flex; }
        .action-dropdown { display: none; }
    }
</style>

<div class="container-fluid">
    <div class="row g-3">
        <div class="col-12">

            <partial name="~/Views/Shared/_Alerts.cshtml" />
            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger d-flex align-items-center gap-2">
                    <i class="fas fa-exclamation-triangle"></i><span>@ViewBag.Error</span>
                </div>
            }

            <div class="card border-0 shadow-sm">
                <div class="card-header d-flex flex-wrap align-items-center justify-content-between gap-2">
                    <div>
                        <h3 class="card-title mb-0">Petugas</h3>
                        <div class="small text-muted">Pencarian, filter, sortir, dan pagination di server.</div>
                    </div>

                    <div class="toolbar d-flex flex-wrap align-items-end gap-2">
                        <form method="get" class="d-flex flex-wrap align-items-end gap-2">
                            <input type="hidden" name="sortBy" value="@sortBy" />
                            <input type="hidden" name="sortDir" value="@sortDir" />
                            <input type="hidden" name="page"    value="1" />

                            <div>
                                <label class="form-label small text-muted">Pencarian</label>
                                <input class="form-control" name="q" value="@q" placeholder="Cari nama / badge / role" />
                            </div>

                            <div>
                                <label class="form-label small text-muted">Filter Role</label>
                                <select class="form-select" name="roleId">
                                    <option value="">— Semua Role —</option>
                                    @foreach (var r in roles)
                                    {
                                        if (roleIdQ == r.Id.ToString())
                                        { <option value="@r.Id" selected>@r.Display</option> }
                                        else
                                        { <option value="@r.Id">@r.Display</option> }
                                    }
                                </select>
                            </div>

                            <div>
                                <label class="form-label small text-muted">Filter Lokasi</label>
                                <select class="form-select" name="lokasiId">
                                    <option value="">— Semua Lokasi —</option>
                                    @foreach (var l in lokasi)
                                    {
                                        if (lokasiIdQ == l.Id.ToString())
                                        { <option value="@l.Id" selected>@l.Nama</option> }
                                        else
                                        { <option value="@l.Id">@l.Nama</option> }
                                    }
                                </select>
                            </div>

                            <div>
                                <label class="form-label small text-muted">Per halaman</label>
                                <select class="form-select" name="pageSize" onchange="this.form.submit()">
                                    @if (pageSize == 10)   { <option value="10" selected>10</option> }   else { <option value="10">10</option> }
                                    @if (pageSize == 20)   { <option value="20" selected>20</option> }   else { <option value="20">20</option> }
                                    @if (pageSize == 50)   { <option value="50" selected>50</option> }   else { <option value="50">50</option> }
                                    @if (pageSize == 100)  { <option value="100" selected>100</option> } else { <option value="100">100</option> }
                                </select>
                            </div>

                            <div class="d-flex gap-2">
                                <button class="btn btn-outline-secondary" type="submit">
                                    <i class="fas fa-search"></i> Terapkan
                                </button>
                                <a class="btn btn-light border" href="@Url.Action("Index")">
                                    <i class="fas fa-undo"></i> Reset
                                </a>
                            </div>
                        </form>

                        <a class="btn btn-primary" asp-action="Create">
                            <i class="fas fa-plus"></i> Tambah Petugas
                        </a>
                    </div>
                </div>

                <div class="card-body">
                    @if (Model?.items is { Count: > 0 })
                    {
                        <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-2">
                            <div class="small text-muted">
                                Menampilkan <strong>@startIdx</strong>-<strong>@endIdx</strong> dari <strong>@total</strong> data.
                                @if (!string.IsNullOrWhiteSpace(q))
                                { <span class="badge k-chip ms-1"><i class="fas fa-search"></i> “@q”</span> }
                                @if (!string.IsNullOrWhiteSpace(roleIdQ))
                                { <span class="badge k-chip ms-1"><i class="fas fa-user-shield"></i> Role: @roleNamaTerpilih</span> }
                                @if (!string.IsNullOrWhiteSpace(lokasiIdQ))
                                { <span class="badge k-chip ms-1"><i class="fas fa-map-marker-alt"></i> Lokasi: @lokasiNamaTerpilih</span> }
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead class="table-light sticky-head">
                                    <tr>
                                        <th>
                                            <a class="@(sBadge ? "sort-active" : "")" href="@sBadgeUrl">
                                                Badge <span class="sort-caret">@(sBadge ? caret : "↕")</span>
                                            </a>
                                        </th>
                                        <th>
                                            <a class="@(sNama ? "sort-active" : "")" href="@sNamaUrl">
                                                Nama <span class="sort-caret">@(sNama ? caret : "↕")</span>
                                            </a>
                                        </th>
                                        <th>
                                            <a class="@(sRole ? "sort-active" : "")" href="@sRoleUrl">
                                                Role <span class="sort-caret">@(sRole ? caret : "↕")</span>
                                            </a>
                                        </th>
                                        <th>
                                            <a class="@(sLok ? "sort-active" : "")" href="@sLokUrl">
                                                Lokasi <span class="sort-caret">@(sLok ? caret : "↕")</span>
                                            </a>
                                        </th>
                                        <th class="text-end" style="width:170px;">Aksi</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var x in Model.items)
                                {
                                    <tr>
                                        <td><span class="badge bg-secondary kode-badge">@x.BadgeNumber</span></td>
                                        <td>@(string.IsNullOrWhiteSpace(x.EmployeeNama) ? "-" : x.EmployeeNama)</td>
                                        <td>@(string.IsNullOrWhiteSpace(x.RoleNama)     ? "-" : x.RoleNama)</td>
                                        <td>@(string.IsNullOrWhiteSpace(x.LokasiNama)   ? "-" : x.LokasiNama)</td>
                                        <td class="text-end">
                                            <!-- Desktop -->
                                            <div class="btn-group action-inline">
                                                <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-route-id="@x.Id" title="Detail">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@x.Id" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete(@x.Id, '@(x.EmployeeNama ?? x.BadgeNumber)')" title="Hapus">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                            <!-- Mobile -->
                                            <div class="dropdown action-dropdown">
                                                <button class="btn btn-sm btn-light border dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Aksi
                                                </button>
                                                <ul class="dropdown-menu dropdown-menu-end">
                                                    <li><a class="dropdown-item" asp-action="Details" asp-route-id="@x.Id"><i class="fas fa-eye me-2"></i>Detail</a></li>
                                                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@x.Id"><i class="fas fa-edit me-2"></i>Edit</a></li>
                                                    <li><hr class="dropdown-divider" /></li>
                                                    <li>
                                                        <button type="button" class="dropdown-item text-danger" onclick="confirmDelete(@x.Id, '@(x.EmployeeNama ?? x.BadgeNumber)')">
                                                            <i class="fas fa-trash me-2"></i>Hapus
                                                        </button>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="small text-muted">
                                Halaman <strong>@safeCur</strong> dari <strong>@(Math.Max(1, totalPages))</strong>
                            </div>
                            <nav aria-label="Navigasi halaman">
                                <ul class="pagination mb-0">
                                    <li class="page-item @((safeCur <= 1 || totalPages == 0) ? "disabled" : "")">
                                        <a class="page-link" href="@prevUrl" aria-label="Sebelumnya">Prev</a>
                                    </li>

                                    @if (left > 1)
                                    {
                                        <li class="page-item"><a class="page-link" href="@(pg(1))">1</a></li>
                                        @if (left > 2)
                                        {
                                            <li class="page-item disabled"><span class="page-link">…</span></li>
                                        }
                                    }

                                    @for (int i = left; i <= right; i++)
                                    {
                                        <li class="page-item @(i == safeCur ? "active" : "")">
                                            <a class="page-link" href="@(pg(i))">@i</a>
                                        </li>
                                    }

                                    @if (right < totalPages)
                                    {
                                        @if (right < totalPages - 1)
                                        {
                                            <li class="page-item disabled"><span class="page-link">…</span></li>
                                        }
                                        <li class="page-item"><a class="page-link" href="@(pg(totalPages))">@totalPages</a></li>
                                    }

                                    <li class="page-item @((safeCur >= totalPages || totalPages == 0) ? "disabled" : "")">
                                        <a class="page-link" href="@nextUrl" aria-label="Berikutnya">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info d-flex align-items-start gap-2 mb-0">
                            <i class="fas fa-info-circle mt-1"></i>
                            <div>
                                <div class="fw-semibold">Data tidak ditemukan.</div>
                                <div class="small">Coba ubah kata kunci, filter, atau ukuran halaman.</div>
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="deleteModalLabel" class="modal-title">Konfirmasi Hapus</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                <p>Yakin ingin menghapus <strong id="delName"></strong>?</p>
                <p class="text-danger small mb-0">Tindakan ini tidak dapat dibatalkan.</p>
            </div>
            <div class="modal-footer">
                <form id="delForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-danger">Hapus</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            window.confirmDelete = function (id, name) {
                document.getElementById('delName').textContent = name || ('ID ' + id);
                const form = document.getElementById('delForm');
                form.action = '@Url.Action("Delete")/' + id; // POST /Petugas/Delete/{id}
                new bootstrap.Modal(document.getElementById('deleteModal')).show();
            };
        })();
    </script>
}
